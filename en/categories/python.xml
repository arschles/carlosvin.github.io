<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Vin's Blog (Python)</title><link>http://carlosvin.github.io/</link><description></description><atom:link href="http://carlosvin.github.io/en/categories/python.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 29 Mar 2014 13:50:13 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>First post with Nikola</title><link>http://carlosvin.github.io/en/posts/primer-post.html</link><description>&lt;div&gt;&lt;p&gt;I guess that the most people come from dynamic content management systems based on:&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;send data from browser to server&lt;/li&gt;
&lt;li&gt;process the received data, then it stores the processed info into a database (or files)&lt;/li&gt;
&lt;li&gt;the server generate dynamically an answer that is sent to the browser as HTML&lt;ul&gt;&lt;li&gt;the answer is usually built reading info from a database or files.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This process is managed by a software installed on server, this is our content management system.&lt;/p&gt;
&lt;p&gt;Now I've changed the paradigm to "static web site generator", specifically I'm going to use &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;,
although this time, I'm not going to install on a remote server.&lt;/p&gt;
&lt;p&gt;In a next post I'll tell you how I've automated the publication process using &lt;a class="reference external" href="http://www.github.com"&gt;Github&lt;/a&gt; &lt;a class="footnote-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#id9" id="id1"&gt;[1]&lt;/a&gt; and &lt;a class="reference external" href="https://travis-ci.org/"&gt;Travis&lt;/a&gt; &lt;a class="footnote-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#id10" id="id2"&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="path-to-nikola"&gt;
&lt;p class="topic-title first"&gt;Path to &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/primer-post.html#phpnuke" id="id16"&gt;PhpNuke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/primer-post.html#my-own-content-management-system" id="id17"&gt;My Own Content Management System&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/primer-post.html#drupal" id="id18"&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/primer-post.html#wordpress" id="id19"&gt;Wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/primer-post.html#cmsdj" id="id20"&gt;CMSdj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/primer-post.html#nikola" id="id21"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="section" id="phpnuke"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://www.phpnuke.org/"&gt;PhpNuke&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My first content management system, yes it still exists. It based on PHP+MySQL, multi-lang, user management, user groups, theming, plugins, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="my-own-content-management-system"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id17"&gt;My Own Content Management System&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It wasn't a full &lt;a class="citation-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#cms" id="id3"&gt;[CMS]&lt;/a&gt;, because actually it was a blogging system. I can publish posts dynamically, it was made with PHP and MySQL. It was useful to:&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;Publish posts (with several problems).&lt;/li&gt;
&lt;li&gt;I realized that a developer needs a designer.&lt;/li&gt;
&lt;li&gt;I don't like the &lt;a class="reference external" href="http://www.php.net/"&gt;PHP&lt;/a&gt; syntax.&lt;/li&gt;
&lt;li&gt;I began to understand the importance of &lt;a class="citation-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#dry" id="id4"&gt;[DRY]&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;div class="section" id="drupal"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://drupal.org/"&gt;Drupal&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A full &lt;a class="citation-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#cms" id="id5"&gt;[CMS]&lt;/a&gt;, I liked it until the things began to "break" (I shared the guilty with &lt;a class="reference external" href="https://drupal.org/"&gt;Drupal&lt;/a&gt;). But &lt;a class="reference external" href="https://drupal.org/"&gt;Drupal&lt;/a&gt; has everything you expect from a &lt;a class="citation-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#cms" id="id6"&gt;[CMS]&lt;/a&gt; and more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="wordpress"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://wordpress.org/"&gt;Wordpress&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I don't know if it is better or worse than &lt;a class="reference external" href="https://drupal.org/"&gt;Drupal&lt;/a&gt;, there are many discussions in Internet, but I can tell &lt;a class="reference external" href="https://wordpress.org/"&gt;Wordpress&lt;/a&gt; is more usable and easier to update than &lt;a class="reference external" href="https://drupal.org/"&gt;Drupal&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cmsdj"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://bitbucket.org/carlosvin/cmsdj"&gt;CMSdj&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is my second attempt to create my own &lt;a class="citation-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#cms" id="id7"&gt;[CMS]&lt;/a&gt;. I had an idea in my mind about how to be the core design (the data model), I still believe in that design. I had also discovered &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;, I liked this framework developed in &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt;, who can resist to create your own &lt;a class="citation-reference" href="http://carlosvin.github.io/en/posts/primer-post.html#cms" id="id8"&gt;[CMS]&lt;/a&gt;?
&lt;a class="reference external" href="https://bitbucket.org/carlosvin/cmsdj"&gt;CMSdj&lt;/a&gt; is in &lt;a class="reference external" href="https://bitbucket.org"&gt;Bitbucket&lt;/a&gt; and is working, it has its internal search engine, theming, comment system, voting system,HTML5_ + &lt;a class="reference external" href="http://www.w3.org/Style/CSS/current-work"&gt;CSS3&lt;/a&gt; views, but:&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;I haven't enough time to develop, two hours by week at most.&lt;/li&gt;
&lt;li&gt;I still needed a designer.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So, I declared the project &lt;a class="reference external" href="https://bitbucket.org/carlosvin/cmsdj"&gt;CMSdj&lt;/a&gt; dead of boredom, although it was supporting my old blog, when I went to write something, I saw my unfinished project, I disliked it, so I decided to close it and begin a new one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nikola"&gt;
&lt;h3&gt;&lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I was a static website generator because they are trendy.
I tried &lt;a class="reference external" href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; because it's the most famous, but I prefer one written in &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt;. So, after a quick search I had three finalists: &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;, &lt;a class="reference external" href="http://mynt.mirroredwhite.com/"&gt;Mynt&lt;/a&gt; y &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;. I chose &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;  because I discarded the others:
* &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; throws some multi-lang problems with the categories. I didn't want to spend time researching about how to fix them.
* I love the simplicity of &lt;a class="reference external" href="http://mynt.mirroredwhite.com/"&gt;Mynt&lt;/a&gt;, but you have to create your own themes, I never want to miss a designer.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;tbody valign="top"&gt;&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.github.com"&gt;Github&lt;/a&gt; hosts the generated site, the static files (html, css, images, js).&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;tbody valign="top"&gt;&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://travis-ci.org/"&gt;Travis&lt;/a&gt; is a continuous integration software (like &lt;a class="reference external" href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt;). I use it to automate the site deployment: download the files when they change from &lt;a class="reference external" href="http://www.github.com"&gt;Github&lt;/a&gt;, re-generate and re-publish the static files.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class="docutils citation" frame="void" id="dry" rules="none"&gt;&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;tbody valign="top"&gt;&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id4"&gt;[DRY]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Don't Repeat Yourself, ´DRY in wiki´_&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class="docutils citation" frame="void" id="cms" rules="none"&gt;&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;tbody valign="top"&gt;&lt;tr&gt;&lt;td class="label"&gt;[CMS]&lt;/td&gt;&lt;td&gt;&lt;em&gt;(&lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id3"&gt;1&lt;/a&gt;, &lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id5"&gt;2&lt;/a&gt;, &lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id6"&gt;3&lt;/a&gt;, &lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id7"&gt;4&lt;/a&gt;, &lt;a class="fn-backref" href="http://carlosvin.github.io/en/posts/primer-post.html#id8"&gt;5&lt;/a&gt;)&lt;/em&gt; Content Management System&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>Python</category><category>Static Sites</category><guid>http://carlosvin.github.io/en/posts/primer-post.html</guid><pubDate>Thu, 27 Mar 2014 12:30:02 GMT</pubDate></item><item><title>Eliminar/Reemplazar signos de puntuación en Python</title><link>http://carlosvin.github.io/en/posts/remove-replace-punctuation-py.html</link><description>&lt;div&gt;&lt;p&gt;A continuación muestro una forma de eliminar los signos de puntuación de una cadena de caractéres en Python. Los signos de puntuación son reemplazados por caractéres en blanco.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_punctuation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;]'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;punctuation&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Ejecutando:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; remove_punctuation &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"El perro, de San Roque, no tiene rabo; ni nunca lo ha tenido."&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;'El perro  de San Roque  no tiene rabo  ni nunca lo ha tenido '&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Si queremos hacer la función más general, para reemplazar los signos de puntuación por cualquier otra cadena, simplemente hay que hacer la siguiente modificación en la función.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;replace_punctuation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;]'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;punctuation&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Ejecutando el código de arriba:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; replace_punctuation &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"El perro, de San Roque, no tiene rabo; ni nunca lo ha tenido."&lt;/span&gt;, &lt;span class="s1"&gt;'[stop]'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;'El perro[stop] de San Roque[stop] no tiene rabo[stop] ni nunca lo ha tenido[stop]'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>http://carlosvin.github.io/en/posts/remove-replace-punctuation-py.html</guid><pubDate>Tue, 23 Oct 2012 13:00:00 GMT</pubDate></item></channel></rss>